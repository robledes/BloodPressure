@page "/claims"

@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

<h3>ClaimsPrincipal Data</h3>

<button @onclick="GetClaimsPrincipalData">Get ClaimsPrincipal Data</button>
<br />
<br />
<p>@_authMessage</p>
<br />
@if (_claims.Count() > 0)
{
    <ul>
        @foreach (Claim? claim in _claims)
        {
            <li>@claim.Type: @claim.Value</li>
        }
    </ul>
}
<br />
<p>Name: @_name</p>
<p>Expires: @_expires</p>
<p>Now: @DateTime.Now</p>

@code {
    
    [Inject] private AuthenticationStateProvider AuthenticationStateProvider { get; set; }
    
    private string _authMessage;
    private string? _name;
    private DateTime _expires;

    private IEnumerable<Claim> _claims = Enumerable.Empty<Claim>();

    private async Task GetClaimsPrincipalData()
    {
        AuthenticationState? authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        ClaimsPrincipal? user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            _authMessage = $"{user.Identity.Name} is authenticated.";
            _claims = user.Claims;
            _name = user.FindFirst(c => c.Type == ClaimTypes.Name)?.Value;
            _expires = DateTime.Parse("1970-01-01").AddSeconds(int.Parse(_claims.FirstOrDefault(c => c.Type == "exp").Value)).ToLocalTime();
        }
        else
            _authMessage = "The user is NOT authenticated.";
    }
}